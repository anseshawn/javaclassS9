<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.javaclassS9.dao.AdminDAO">

	<select id="getAllMemberList" resultType="com.spring.javaclassS9.vo.MemberVO">
		select *, timestampdiff(day, lastDate, now()) as deleteDiff from memberS order by startDate desc
		<if test="startIndexNo != 0"> limit #{startIndexNo},#{pageSize}</if>;
	</select>
	<select id="getMemberLevelList" resultType="com.spring.javaclassS9.vo.MemberVO">
		select *, timestampdiff(day, lastDate, now()) as deleteDiff from memberS
			where m_group=#{m_group} order by idx desc limit #{startIndexNo},#{pageSize};
	</select>
	<select id="getMemberSearchList" resultType="com.spring.javaclassS9.vo.MemberVO">
		select *, timestampdiff(day, lastDate, now()) as deleteDiff from memberS
			where ${part} like concat('%',#{searchString},'%') order by idx desc
			<if test="startIndexNo != 0"> limit #{startIndexNo},#{pageSize}</if>;
	</select>
	<select id="getJoinMemberCount" resultType="int">
		select count(*) from memberS where <![CDATA[datediff(startDate,now()) > -7]]>;
	</select>
	<select id="getProductEstimateCount" resultType="int">
		select count(*) from productSaleS where statement='QUOTE';
	</select>
	<select id="getMemberDeleteReason" resultType="com.spring.javaclassS9.vo.DeleteMemberVO">
		select deleteReason,reasonDetail, count(*) as reasonCnt from deleteMember
			where deleteReason between 1 and 6 group by deleteReason;
	</select>
	<select id="getMemberJoinDate" resultType="com.spring.javaclassS9.vo.MemberVO">
		select date_format(startDate,'%Y-%m-%d') as joinDate, count(*) as joinCnt from memberS 
			group by date_format(startDate,'%Y-%m-%d');
	</select>
	
	
	<insert id="setMemberDeleteReason">
		insert into deleteMember values(default, #{vo.deleteReason}, #{vo.reasonDetail}, 
		<if test="vo.deleteReason!=6">""</if>
		<if test="vo.deleteReason==6">#{vo.etc}</if>
		);
	</insert>
	
	
	<update id="setMemberLevelUpdateOk">
		update memberS set level=2 where mid = #{mid};
	</update>
	<update id="setProductEstimateChange">
		update productSaleS set statement=#{statement} where idx = #{idx};
	</update>
	
	
	<delete id="setMemberDeleteAll">
		delete from memberS where mid = #{mid};
	</delete>
	<delete id="setEngineerDeleteAll">
		delete from engineerS where mid = #{mid};
	</delete>
	<delete id="setProductDeleteOk">
		delete from productS where idx = #{idx};
	</delete>
</mapper>