<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.javaclassS9.dao.EngineerDAO">
	<select id="getEngineerIdCheck" resultType="com.spring.javaclassS9.vo.EngineerVO">
		select * from engineerS where mid = #{mid} <![CDATA[and level < 99]]>;
	</select>
	<select id="getEngineerNameCheck" resultType="com.spring.javaclassS9.vo.EngineerVO">
		select * from engineerS where name = #{name} <![CDATA[and level < 99]]>;
	</select>
	<select id="totRecCnt" resultType="int">
		select count(*) from engineerS where <![CDATA[level < 99]]>;
	</select>
	<select id="totRecCntSearch" resultType="int">
		select count(*) from engineerS where ${search} like concat('%',#{searchString},'%') <![CDATA[and level < 99]]>;
	</select>
	<select id="getEngineerSearchList" resultType="com.spring.javaclassS9.vo.EngineerVO">
		select * from engineerS where ${part} like concat('%',#{searchString},'%') <![CDATA[and level < 99]]> 
			order by idx desc limit #{startIndexNo},#{pageSize};
	</select>
	<select id="getAllEngineerList" resultType="com.spring.javaclassS9.vo.EngineerVO">
		select * from engineerS where <![CDATA[level < 99]]> order by starPoint desc, idx desc 
			<if test="startIndexNo != -1"> limit #{startIndexNo},#{pageSize}</if>;
	</select>
	<select id="getEngineerIdxCheck" resultType="com.spring.javaclassS9.vo.EngineerVO">
		select * from engineerS where idx = #{idx};
	</select>
	
	<select id="getScheduleListAll" resultType="com.spring.javaclassS9.vo.ScheduleVO">
		select * from scheduleS;
	</select>
	<select id="getScheduleListOne" resultType="com.spring.javaclassS9.vo.ScheduleVO">
		select * from scheduleS where engineerIdx=#{engineerIdx};
	</select>
	
	<select id="getAsRequestList" resultType="com.spring.javaclassS9.vo.AsRequestVO">
		select *, datediff(asDate, now()) as date_diff from asRequest where engineerIdx=#{idx} 
			order by idx desc <if test="startIndexNo != -1"> limit #{startIndexNo},#{pageSize}</if>;
	</select>
	<select id="totAsRequestRecCnt" resultType="int">
		select count(*) from asRequest where engineerIdx=#{searchString};
	</select>
	<select id="getAsRequestContent" resultType="com.spring.javaclassS9.vo.AsRequestVO">
		select *, datediff(asDate, now()) as date_diff from asRequest where idx=#{idx};
	</select>
	<select id="getAllAsRequestList" resultType="com.spring.javaclassS9.vo.AsRequestVO">
		select r.*, datediff(r.asDate, now()) as date_diff, 
			e.name as engineerName, e.mid as engineerMid 
			from asRequest r left join engineerS e on e.idx = r.engineerIdx 
			<if test="search != ''"> where ${search} like concat('%',#{searchString},'%') </if>
			order by r.idx desc limit #{startIndexNo},#{pageSize};
	</select>
	
	
	<insert id="setEngineerJoinOk">
		insert into engineerS values (default, #{vo.name}, #{vo.mid}, #{vo.pwd}, default, #{vo.tel}, #{vo.email},
			#{vo.place}, #{vo.machine}, #{vo.photo}, #{vo.joinDate}, default);
	</insert>
	
	<insert id="setScheduleInput">
		insert into scheduleS values(default, #{vo.engineerIdx}, #{vo.title}, #{vo.startTime}, #{vo.endTime}, #{vo.allDay});
	</insert>
	
	
	<update id="setEngineerReviewInput">
		update engineerS set starPoint = #{starPoint} where idx = #{idx};  
	</update>
	<update id="setEngineerPwdUpdate">
		update engineerS set pwd = #{pwd} where mid = #{mid};
	</update>
	<update id="setEngineerUpdateOk">
		update engineerS set name=#{vo.name}, tel=#{vo.tel}, email=#{vo.email},
			place=#{vo.place}, machine=#{vo.machine}, photo=#{vo.photo} where idx=#{vo.idx};
	</update>
	<update id="setEngineerMidChange">
		update engineerS set mid=#{mid} where idx=#{idx};
	</update>
	
	<update id="setScheduleUpdate">
		update scheduleS set title=#{vo.title}, engineerIdx=#{vo.engineerIdx}, startTime=#{vo.startTime},
			endTime=#{vo.endTime}, allDay=#{vo.allDay} where idx=#{vo.idx};
	</update>
	
	
  <delete id="setScheduleDeleteTrue">
  	delete from scheduleS where title = #{title} and startTime = #{startTime} and engineerIdx=#{engineerIdx};
  </delete>
  <delete id="setScheduleDelete">
  	delete from scheduleS where title=#{title} and startTime=#{startTime}
  		and endTime=#{endTime} and allDay=#{allDay} and engineerIdx=#{engineerIdx};
  </delete>
  
  
</mapper>